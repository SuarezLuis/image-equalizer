{"version":3,"sources":["enums/colors.ts","components/Shared/Button.tsx","getCroppedImage.js","components/Picture.tsx","components/Authenticated.tsx","components/Login.tsx","components/Navbar.tsx","firebase.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","Button","buttonColor","text","onClick","ButtonWrapper","styled","div","blue","red","green","getCroppedImg","image","crop","fileName","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","name","Picture","source","filename","ratioWidth","ratioHeight","useState","setCrop","imageProperties","setImageProperties","ImageRef","useRef","useEffect","prevState","ratio","newCrop","aspect","PictureWrapper","src","onChange","onImageLoaded","current","toFixed","a","download","tempLink","href","window","URL","createObjectURL","setAttribute","click","Authenticated","props","hiddenInputRef","fileList","setFileList","fileArray","setFileArray","objectURLArray","setObjectURLArray","setImageArray","setDimensions","setRatioWidth","setRatioHeight","isRatioCustom","setIsRatioCustom","Wrapper","HidenInput","ref","multiple","type","e","currentTarget","files","newFileArray","newObjectURLArray","newImageArray","Array","from","forEach","file","push","img","Image","onload","path","yellow","length","StyledSelect","target","value","StyledInput","min","parseInt","Preview","map","index","input","select","Login","LoginWrapper","Navbar","userId","NavbarWrapper","Logo","firebase","auth","signOut","provider","GoogleAuthProvider","signInWithPopup","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","setUserId","onAuthStateChanged","user","uid","AppWrapper","className","brown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dotenv","config","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad81e1a8.chunk.js","sourcesContent":["enum colors {\n  blue = \"#2e72b2\",\n  red = \"#ff6978\",\n  green = \"#8bb174\",\n  yellow = \"#fcaf58\",\n  brown = \"#bda79e\",\n}\n\nexport default colors;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport colors from \"../../enums/colors\";\n\ninterface Props {\n  buttonColor: colors;\n  text: string;\n  onClick(): void;\n}\n\nconst Button = ({ buttonColor, text, onClick }: Props) => {\n  return (\n    <ButtonWrapper buttonColor={buttonColor} onClick={onClick}>\n      {text}\n    </ButtonWrapper>\n  );\n};\n\nexport default Button;\n\ninterface IButtonWrapperProps {\n  buttonColor: colors;\n}\n\nconst ButtonWrapper = styled.div<IButtonWrapperProps>`\n  display: inline-block;\n  margin: 10px;\n  padding: 5px 10px;\n  border-radius: 10px;\n  user-select: none;\n  cursor: pointer;\n  background-color: ${({ buttonColor }) => buttonColor};\n  color: ${({ buttonColor }) => {\n    if (\n      buttonColor === colors.blue ||\n      buttonColor === colors.red ||\n      buttonColor === colors.green\n    ) {\n      return \"white\";\n    } else {\n      return \"black\";\n    }\n  }};\n`;\n","/**\n * @param {HTMLImageElement} image - Image File Object\n * @param {Object} crop - crop Object\n * @param {String} fileName - Name of the returned file in Promise\n */\nfunction getCroppedImg(image, crop, fileName) {\n  const canvas = document.createElement(\"canvas\");\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  canvas.width = crop.width * scaleX;\n  canvas.height = crop.height * scaleY;\n  const ctx = canvas.getContext(\"2d\");\n\n  ctx.drawImage(\n    image,\n    crop.x * scaleX,\n    crop.y * scaleY,\n    crop.width * scaleX,\n    crop.height * scaleY,\n    0,\n    0,\n    crop.width * scaleX,\n    crop.height * scaleY\n  );\n\n  // As Base64 string\n  // const base64Image = canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(\n      (blob) => {\n        blob.name = fileName;\n        resolve(blob);\n      },\n      \"image/jpeg\",\n      1\n    );\n  });\n}\n\nexport default getCroppedImg;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport ReactCrop, { Crop } from \"react-image-crop\";\nimport Button from \"./Shared/Button\";\nimport colors from \"../enums/colors\";\nimport getCroppedImg from \"../getCroppedImage\";\n\ninterface Props {\n  source: string;\n  filename: string;\n\n  ratioWidth: number;\n  ratioHeight: number;\n}\n\nconst Picture = ({\n  source,\n  filename,\n\n  ratioWidth,\n  ratioHeight,\n}: Props) => {\n  const [crop, setCrop] = useState<Crop>({});\n  const [imageProperties, setImageProperties] = useState({\n    naturalWidth: 0,\n    naturalHeight: 0,\n    width: 0,\n    height: 0,\n  });\n\n  const ImageRef = useRef<HTMLImageElement | null>(null);\n\n  useEffect(() => {\n    setCrop((prevState) => {\n      const width = imageProperties.width;\n      const height = imageProperties.height;\n      const ratio = ratioWidth / ratioHeight;\n      let newCrop: Crop = { aspect: ratio, width: 0, height: 0 };\n      newCrop.x = 0;\n      newCrop.y = 0;\n\n      if (ratioWidth > ratioHeight) {\n        if (width > height) {\n          newCrop.width = width;\n          newCrop.height = width / ratio;\n        }\n\n        if (width < height) {\n          newCrop.width = width;\n          newCrop.height = width / ratio;\n        }\n\n        if (width === height) {\n          newCrop.width = width;\n          newCrop.height = height / ratio;\n        }\n      }\n\n      if (ratioWidth < ratioHeight) {\n        if (width > height) {\n          newCrop.width = height * ratio;\n          newCrop.height = height;\n        }\n\n        if (width < height) {\n          newCrop.width = height * ratio;\n          newCrop.height = height;\n        }\n\n        if (width === height) {\n          newCrop.width = width * ratio;\n          newCrop.height = height;\n        }\n      }\n\n      if (ratioWidth === ratioHeight) {\n        if (width > height) {\n          newCrop.width = height;\n          newCrop.height = height;\n        }\n\n        if (width < height) {\n          newCrop.width = width;\n          newCrop.height = width;\n        }\n\n        if (width === height) {\n          newCrop.width = width;\n          newCrop.height = height;\n        }\n      }\n      if ((newCrop.width || 0) > width || (newCrop?.height || 0) > height) {\n        newCrop.width = newCrop.width ? newCrop.width / 2 : 0;\n        newCrop.height = newCrop.height ? newCrop.height / 2 : 0;\n      }\n      return newCrop;\n    });\n  }, [\n    filename,\n    imageProperties.height,\n    imageProperties.width,\n    ratioHeight,\n    ratioWidth,\n  ]);\n\n  return (\n    <PictureWrapper>\n      <ReactCrop\n        // keepSelection\n        // imageStyle={{ maxHeight: 300 }}\n        src={source}\n        crop={crop}\n        onChange={(crop) => {\n          setCrop(crop);\n        }}\n        onImageLoaded={(image) => {\n          const { naturalWidth, naturalHeight, width, height } = image;\n          ImageRef.current = image;\n          setImageProperties({ naturalWidth, naturalHeight, width, height });\n        }}\n      />\n      <div>{filename}</div>\n\n      <div>\n        Original Image: {imageProperties.naturalWidth} x{\" \"}\n        {imageProperties.naturalHeight}\n      </div>\n      <div>\n        Preview: {imageProperties.width} x {imageProperties.height} ;\n        {((imageProperties.width || 1) / (imageProperties.height || 1)).toFixed(\n          2\n        )}\n      </div>\n      <div>\n        Selection: {crop.width} x {crop.height} ;{\" \"}\n        {((crop?.width || 1) / (crop?.height || 1)).toFixed(2)}\n      </div>\n      <Button\n        text=\"Download\"\n        buttonColor={colors.green}\n        onClick={async () => {\n          if (ImageRef.current) {\n            const download = await getCroppedImg(\n              ImageRef.current,\n              crop,\n              `equalized-${filename}`\n            );\n\n            const tempLink = document.createElement(\"a\");\n            tempLink.href = window.URL.createObjectURL(download);\n            tempLink.setAttribute(\"download\", `equalized-${filename}`);\n            tempLink.click();\n          }\n        }}\n      />\n    </PictureWrapper>\n  );\n};\n\nexport default Picture;\n\nconst PictureWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  min-width: 300px;\n  align-items: center;\n  margin: 10px;\n  border: solid 2px black;\n`;\n","import React, { ChangeEvent, useRef, useState } from \"react\";\nimport styled from \"styled-components/macro\";\n\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport colors from \"../enums/colors\";\n\nimport Button from \"./Shared/Button\";\nimport Picture from \"./Picture\";\n\ninterface Props {}\n\nconst Authenticated = (props: Props) => {\n  const hiddenInputRef = useRef<HTMLInputElement | null>(null);\n  const [fileList, setFileList] = useState<FileList | string[] | null>(null);\n  const [fileArray, setFileArray] = useState<File[]>([]);\n  const [objectURLArray, setObjectURLArray] = useState<string[]>([]);\n  const [imageArray, setImageArray] = useState<HTMLImageElement[]>([]);\n  const [dimensions, setDimensions] = useState<any>({});\n  const [ratioWidth, setRatioWidth] = useState(1);\n  const [ratioHeight, setRatioHeight] = useState(1);\n  const [isRatioCustom, setIsRatioCustom] = useState(false);\n\n  const handleRatioChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    switch (e.target.value) {\n      case \"1:1\":\n        setRatioWidth(1);\n        setRatioHeight(1);\n        setIsRatioCustom(false);\n        break;\n      case \"4:3\":\n        setRatioWidth(4);\n        setRatioHeight(3);\n        setIsRatioCustom(false);\n        break;\n      case \"16:10\":\n        setRatioWidth(16);\n        setRatioHeight(10);\n        setIsRatioCustom(false);\n        break;\n      case \"16:9\":\n        setRatioWidth(16);\n        setRatioHeight(9);\n        setIsRatioCustom(false);\n        break;\n      case \"2:1\":\n        setRatioWidth(2);\n        setRatioHeight(1);\n        setIsRatioCustom(false);\n        break;\n      case \"5:4\":\n        setRatioWidth(5);\n        setRatioHeight(4);\n        setIsRatioCustom(false);\n        break;\n      case \"3:2\":\n        setRatioWidth(3);\n        setRatioHeight(2);\n        setIsRatioCustom(false);\n        break;\n      case \"custom\":\n        setIsRatioCustom(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Wrapper>\n      <HidenInput\n        ref={hiddenInputRef}\n        multiple\n        type=\"file\"\n        onChange={(e) => {\n          setDimensions({});\n          setFileList(e.currentTarget.files);\n          let newFileArray: File[] = [];\n          let newObjectURLArray: string[] = [];\n          let newImageArray: HTMLImageElement[] = [];\n          Array.from(e.currentTarget.files || []).forEach((file) => {\n            newFileArray.push(file);\n            newObjectURLArray.push(URL.createObjectURL(file));\n            const img = new Image();\n            img.src = URL.createObjectURL(file);\n\n            img.onload = (e: any) => {\n              setDimensions((prevState: any) => {\n                prevState[file.name] = {\n                  width: e.path[0].naturalWidth,\n                  height: e.path[0].naturalHeight,\n                };\n                return prevState;\n              });\n            };\n            newImageArray.push(img);\n          });\n          setFileArray(newFileArray);\n          setObjectURLArray(newObjectURLArray);\n          setImageArray(newImageArray);\n        }}\n      />\n      <div>\n        <Button\n          buttonColor={colors.yellow}\n          text=\"Upload Files\"\n          onClick={() => {\n            hiddenInputRef?.current?.click();\n          }}\n        />\n      </div>\n      {fileList?.length ? (\n        <div>\n          Ratio:{\" \"}\n          <StyledSelect onChange={handleRatioChange}>\n            <option value=\"1:1\">1:1 Square</option>\n            <option value=\"4:3\">4:3 Standard</option>\n            <option value=\"16:10\">16:10 Standard</option>\n            <option value=\"16:9\">16:9 Standard</option>\n            <option value=\"2:1\">2:1</option>\n            <option value=\"5:4\">5:4</option>\n\n            <option value=\"3:2\">3:2</option>\n            <option value=\"custom\">Custom</option>\n          </StyledSelect>\n          {fileList?.length && isRatioCustom ? (\n            <>\n              <StyledInput\n                type=\"number\"\n                min=\"1\"\n                value={ratioWidth}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                  setRatioWidth(parseInt(e.target.value));\n                }}\n              />{\" \"}\n              :{\" \"}\n              <StyledInput\n                type=\"number\"\n                min=\"1\"\n                value={ratioHeight}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                  setRatioHeight(parseInt(e.target.value));\n                }}\n              />\n            </>\n          ) : null}\n        </div>\n      ) : null}\n\n      <Preview>\n        {fileArray?.map((file, index) => {\n          if (fileList) {\n            return (\n              <Picture\n                source={objectURLArray[index]}\n                filename={file.name}\n                ratioWidth={ratioWidth}\n                ratioHeight={ratioHeight}\n              />\n            );\n          }\n          return null;\n        })}\n      </Preview>\n    </Wrapper>\n  );\n};\n\nexport default Authenticated;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst HidenInput = styled.input`\n  display: none;\n`;\n\nconst Preview = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n`;\n\nconst StyledSelect = styled.select`\n  background-color: ${colors.yellow};\n  padding: 10px;\n  border-radius: 10px;\n  margin: 10px 20px 20px 0;\n  box-shadow: none;\n  border: none;\n`;\n\nconst StyledInput = styled.input`\n  background-color: ${colors.yellow};\n  padding: 10px;\n  border-radius: 10px;\n  margin: 10px 0 20px 0;\n  width: 75px;\n  box-shadow: none;\n  border: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Login = () => {\n  return <LoginWrapper>Please log in to use this app</LoginWrapper>;\n};\n\nexport default Login;\n\nconst LoginWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../enums/colors\";\nimport Button from \"./Shared/Button\";\nimport firebase from \"firebase/app\";\ninterface Props {\n  userId: string | undefined;\n}\n\nconst Navbar = ({ userId }: Props) => {\n  const signIn = () => {\n    if (firebase) {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider);\n    }\n  };\n\n  const signOut = () => {\n    firebase.auth().signOut();\n  };\n  return (\n    <NavbarWrapper>\n      <div>\n        <Logo>IMAGE EQUALIZER</Logo>\n      </div>\n      <div>\n        {userId ? (\n          <Button text=\"Log out\" buttonColor={colors.red} onClick={signOut} />\n        ) : (\n          <Button text=\"Login\" buttonColor={colors.yellow} onClick={signIn} />\n        )}\n      </div>\n    </NavbarWrapper>\n  );\n};\n\nexport default Navbar;\n\nconst NavbarWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 50px;\n  background-color: ${colors.blue};\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Logo = styled.div`\n  background-color: white;\n  padding: 2px 10px;\n  border: 3px solid black;\n\n  margin: 0 10px;\n`;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_PROJECTID,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// firebase.analytics();\n\nexport default firebase;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components/macro\";\n\nimport \"./App.css\";\nimport Authenticated from \"./components/Authenticated\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport colors from \"./enums/colors\";\n\nimport firebase from \"./firebase\";\n\nfunction App(): JSX.Element {\n  const [userId, setUserId] = useState<string | undefined>(\"\");\n  firebase.auth().onAuthStateChanged((user) => {\n    setUserId(user?.uid);\n  });\n  return (\n    <AppWrapper className=\"App\">\n      <Navbar userId={userId} />\n      {userId ? <Authenticated /> : <Login />}\n    </AppWrapper>\n  );\n}\n\nexport default App;\n\nconst AppWrapper = styled.div`\n  background-color: ${colors.brown};\n  height: 100vh;\n  width: 100vw;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  font-family: \"IBM Plex Mono\", monospace;\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport dotenv from \"dotenv\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\ndotenv.config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}